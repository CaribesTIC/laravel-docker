import{_ as s,c as a,o as n,N as o}from"./chunks/framework.b84479ea.js";const A=JSON.parse('{"title":"Modo Prueba","description":"","frontmatter":{},"headers":[],"relativePath":"guide/test-mode.md"}'),e={name:"guide/test-mode.md"},l=o(`<h1 id="modo-prueba" tabindex="-1">Modo Prueba <a class="header-anchor" href="#modo-prueba" aria-label="Permalink to &quot;Modo Prueba&quot;">â€‹</a></h1><blockquote><p>Para este entorno en realidad no hay nada de que preocuparse, ya que simplemente aprovecharemos paralelamente el mismo entorno <code>development</code>.</p></blockquote><p>Echemos un vistazo a la Ãºltima instrucciÃ³n de la plantilla de desarrollo.</p><p>ðŸ“ƒdocker-compose.dev.yml</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># omitted for brevity </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#FFCB6B;">command</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sh </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cd /app; npm install; npm run dev</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>Tenga en cuenta que mientras no cancelemos el <code>npm run dev</code> que ejecutamos como Ãºltimo comando en modo <code>development</code>, el contenedor se mantendrÃ¡ vivo. Por lo que podemos abrir otro terminal y entrar dentro del contenedor con el siguiente comando:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue_dev_env</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span></span></code></pre></div><p>Listo, ya estamos dentro del contenedor.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">root@4e31d8b8d95b:/app</span><span style="color:#A6ACCD;">#</span></span></code></pre></div><p>Por lo que, si ya tenemos instalado correctamente Vitest y Vue Test Utils, como se <a href="./../guide/simple-example.html">indicÃ³</a> previamente, entonces podemos probar la aplicaciÃ³n.</p><p>Ejecutemos la instrucciÃ³n <code>npm run test:unit</code>.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">root@4e31d8b8d95b:/app</span><span style="color:#A6ACCD;"># npm run test:unit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> docker-vue-example@0.0.0 test:unit</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> vitest --environment jsdom</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DEV</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">v0.</span><span style="color:#F78C6C;">21.1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">âœ“</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/components/__tests__/HelloWorld.spec.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Files</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">Tests</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">passed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">23</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">01</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">38</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Duration</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">3.60s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">1ms,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">collect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">381ms,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tests</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">25ms</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                                                                                                                                     </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PASS</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">Waiting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">changes...</span><span style="color:#A6ACCD;">                                                                                                   </span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#FFCB6B;">press</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">h</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">show</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">help,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">press</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">q</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quit</span></span></code></pre></div><blockquote><p>Presione <code>Ctrl-C</code> para detener la prueba y ejecute <code>exit</code> para salir del contenedor. Presione <code>Ctrl-C</code> para detener el contenedor en modo <code>development</code>.</p></blockquote>`,13),p=[l];function t(c,r,C,y,D,i){return n(),a("div",null,p)}const m=s(e,[["render",t]]);export{A as __pageData,m as default};
